# This is a basic workflow to help you get started with Actions

name: PipeLine

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: azure authorization
        run: |
          az login --service-principal -u ${{ secrets.AZUREUSER }} -p ${{ secrets.AZUREPWD }} --tenant ${{ secrets.TENANTID }} --allow-no-subscriptions
          
      - name: Run Terraform
        run: |
          export ARM_CLIENT_ID="${{ secrets.AZUREUSER }}"
          export ARM_CLIENT_SECRET="${{ secrets.AZUREPWD }}"
          export ARM_TENANT_ID="${{ secrets.TENANTID }}"
          export ARM_SUBSCRIPTION_ID="316098cb-8835-448e-90e6-20a073644853"
          echo localUsr = "${{ secrets.LOCAL_USER }}" >> variables.tfvars
          echo localPwd =  "${{ secrets.LOCAL_PWD }}" >> variables.tfvars
          terraform init
          terraform plan -var-file="variables.tfvars"
          #terraform apply -auto-approve -var-file="variables.tfvars"
          #terraform destroy -auto-approve -var-file="variables.tfvars"
